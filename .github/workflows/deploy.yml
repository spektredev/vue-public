name: Build and Deploy Nuxt

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build and push Nuxt image
        run: |
          docker build -t tgrow/tgrow:nuxt-${{ github.sha }} .
          docker tag tgrow/tgrow:nuxt-${{ github.sha }} tgrow/tgrow:nuxt-latest
          docker push tgrow/tgrow:nuxt-${{ github.sha }}
          docker push tgrow/tgrow:nuxt-latest

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Deploy Nuxt via SSH
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SSH_HOST: ${{ secrets.SSH_HOST }}
          SSH_USER: root
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          echo "$SSH_PRIVATE_KEY" > private_key
          chmod 600 private_key
          ssh -o StrictHostKeyChecking=no -i private_key $SSH_USER@$SSH_HOST powershell -Command "& {
            \$env:DOCKER_HOST = 'npipe:////./pipe/dockerDesktopLinuxEngine';
            cd C:\\tgrow;
            docker login -u '$DOCKER_USERNAME' -p '$DOCKER_PASSWORD';
            docker-compose pull nuxt;
            docker-compose up -d nuxt;
            docker system prune -f
          }"
          rm private_key